#!/bin/bash

# Generate a comma-separated file containing prod service stats for the previous
# month and send by email.

source {{ informix_install_path }}/etc/informix.env.${USER}

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")

database="prod"

start_date="01/$(date -d '-1 month' '+%m/%Y')"
end_date="01/$(date '+%m/%Y')"

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root" >&2
        exit 1
    fi
}

create_mail_file () {
    mail_file=$(mktemp -t prod_stats.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail file" >&2
        exit 1
    fi
}

create_unload_file () {
    unload_file=$(mktemp -t unload_file.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary unload file" >&2
        exit 1
    fi
}

unload_db_rows () {
    dbaccess ${database} <<EOF >/dev/null 2>&1
set isolation dirty read;
unload to "${unload_file}" delimiter ","
select prod_info.description, product.location, count(*), price
from product, prod_info
where product.system_id = "CIC"
and product.tx_date between "${start_date}" and "${end_date}"
and (product.prod_code = prod_info.prod_code)
group by prod_info.description, product.location, prod_info.price
order by prod_info.description, product.location, prod_info.price;
EOF
}

populate_mail_file () {
    echo -e "PROD stats for period ${start_date} to ${end_date}\n" >> "${mail_file}"
    echo -e "Product Type,Location,Total,Value per Transaction\n"  >> "${mail_file}"
    cat "${unload_file}" >> "${mail_file}"
}

delete_unload_file () {
    rm -f "${unload_file}"
}

delete_mail_file () {
    rm -f "${mail_file}"
}

# -- Stats --------------------------------------------------------------------

send_stats () {
{% if stats.enabled %}
    local temp_dir; temp_dir=$(mktemp -d -t prod_stats.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail directory" >&2
        exit 1
    fi

    cp "${mail_file}" "${temp_dir}/prod_stats.csv"
    mailx -a "${temp_dir}/prod_stats.csv" -s "PROD stats for period ${start_date} to ${end_date}" {% for recipient in stats_config.recipients %}{{ recipient }} {% endfor %}< /dev/null
    rm -rf "${temp_dir}"
{% else %}
    echo "Stats disabled; no file(s) will be sent"
{% endif %}
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    check_user
    create_mail_file
    create_unload_file
    unload_db_rows
    populate_mail_file
    send_stats
    delete_mail_file
    delete_unload_file
}

main "${@}"
