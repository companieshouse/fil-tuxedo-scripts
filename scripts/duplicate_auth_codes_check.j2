#!/bin/bash

# Check for duplicate auth codes and send alerts by email.

source "{{ informix_install_path }}/etc/informix.env.${USER}"

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")

database="ef_db"

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root" >&2
        exit 1
    fi
}

create_mail_file () {
    mail_file=$(mktemp -t "${script_name}.XXXXXXX")
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail file" >&2
        exit 1
    fi
}

exit_on_error () {
    local exit_code="$1"
    local message="$2"
    if [[ "${exit_code}" -ne 0 ]]; then
        echo "Error: ${message}"
        exit "${exit_code}"
    fi
}

unload_db_rows () {
    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
set isolation to dirty read;
unload to "${mail_file}" delimiter ","
select doc_auth_co_no, count(doc_auth_co_no) from doc_auth
where doc_auth_end_dt is null
and doc_auth_co_no <> "ZZZZZZZZ"
group by doc_auth_co_no
having count(*) > 1;
EOF
    exit_on_error "$?" "dbaccess returned $? (${FUNCNAME[0]}:${LINENO})"
}

delete_mail_file () {
    rm -f "${mail_file}"
}

# -- Alerts -------------------------------------------------------------------

send_alert () {
{% if alerts.enabled %}
    local temp_file="duplicate_auth_codes.txt"
    pushd /tmp >/dev/null
    cp -f "${mail_file}" "${temp_file}"
    mailx -a "${temp_file}" -s "WARNING - Duplicate Auth Code File" {% for recipient in alerts_config.duplicate_auth_codes_check %}{{ recipient }} {% endfor %}< "${mail_file}"
    rm -f "${temp_file}"
    popd >/dev/null
{% else %}
    echo "Alerts disabled; no mail message(s) will be generated"
{% endif %}
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    check_user
    create_mail_file
    unload_db_rows

    if [[ -s "${mail_file}" ]]; then
        send_alert
    fi

    delete_mail_file
}

main "${@}"
