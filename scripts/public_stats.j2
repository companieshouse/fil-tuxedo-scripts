#!/bin/bash

# Generate SCUD public search stats and send by email.

source "{{ informix_install_path }}/etc/informix.env.${USER}"

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")

database="scud"

today=$(date '+%d/%m/%y')

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root" >&2
        exit 1
    fi
}

create_mail_file () {
    mail_file=$(mktemp -t public_stats.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail file" >&2
        exit 1
    fi
}

append_mail_file () {
    local message="$1"
    echo -e "${message}" >> "${mail_file}"
}

exit_on_error () {
    local exit_code="$1"
    local message="$2"
    if [[ "${exit_code}" -ne 0 ]]; then
        echo "${script_name}: ${message}" >&2
        exit "${exit_code}"
    fi
}

add_stats_header () {
    append_mail_file "PUBLIC SEARCH Statistics for week ending ${today}"
    append_mail_file "===========================================\n"
}

add_scud_search_orders_requested_header () {
    append_mail_file "Total PUBLIC search orders received:"
}

add_scud_search_orders_transmitted_header () {
    append_mail_file "PUBLIC search orders transmitted:"
}

add_scud_search_orders_requested_count () {
    local temp_file; temp_file=$(mktemp -t public_stats.XXXXXXX)
    exit_on_error "$?" "Unable to create temporary file (${FUNCNAME[0]}:${LINENO})"

    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
unload to "${temp_file}"
select count(*) from orders where order_date > (today - 7) and
order_date <= (today) and
account_number IN ("00910132000","00910134000","00910130000","00910131000","00910135000","00910054000","00910136000");
EOF

    local requested_scud_search_orders=$(cut -f1 -d '.' "${temp_file}")
    append_mail_file "${requested_scud_search_orders}\n"

    rm -f "${temp_file}"
    exit_on_error "$?" "Unable to remove temporary file (${FUNCNAME[0]}:${LINENO})"
}

add_scud_search_orders_transmitted_count () {
    local temp_file; temp_file=$(mktemp -t public_stats.XXXXXXX)
    exit_on_error "$?" "Unable to create temporary file (${FUNCNAME[0]}:${LINENO})"

    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
unload to "${temp_file}"
select count(*) from orders where order_date > (today - 7) and  
order_date <= (today) and
order_status = "T" 
and account_number IN ("00910132000","00910134000","00910130000","00910131000","00910135000","00910054000","00910136000");
EOF

    local transmitted_scud_search_orders=$(cut -f1 -d '.' "${temp_file}")
    append_mail_file "${transmitted_scud_search_orders}\n"

    rm -f "${temp_file}"
    exit_on_error "$?" "Unable to remove temporary file (${FUNCNAME[0]}:${LINENO})"
}

delete_mail_file () {
    rm -f "${mail_file}"
}

# -- Stats --------------------------------------------------------------------

send_stats () {
{% if stats.enabled %}
    mailx -s "INFO - PUBLIC SEARCH Stats for Week Ending Friday ${today}" {% for recipient in stats_config.public_stats_recipients %}{{ recipient }} {% endfor %}< "${mail_file}"
{% else %}
    echo "Stats disabled; no file(s) will be sent"
{% endif %}
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    check_user
    create_mail_file
    add_stats_header
    add_scud_search_orders_requested_header
    add_scud_search_orders_requested_count
    add_scud_search_orders_transmitted_header
    add_scud_search_orders_transmitted_count
    send_stats
    delete_mail_file
}

main "${@}"
