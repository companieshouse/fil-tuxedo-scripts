#!/bin/bash

# Archive old SCUD orders to a separate database table.

source "{{ informix_install_path }}/etc/informix.env.${USER}"

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")

database="scud"

log_file="{{ tuxedo_logs_path }}/${USER}/orders_archive.log"

# -- General ------------------------------------------------------------------

log () {
    local message="$1"
    tee -a "${log_file}" <<< "$(date --iso-8601=seconds) ${message}"
}

check_user () {
    if [[ "${USER}" == "root" ]]; then
        log "Error: This script should be executed as a Tuxedo service user not root"
        exit 1
    fi
}

exit_on_error () {
    local exit_code="$1"
    local message="$2"
    if [[ "${exit_code}" -ne 0 ]]; then
        log "Error: ${message}"
        exit "${exit_code}"
    fi
}

create_unload_file () {
    unload_file=$(mktemp -t orders_archive_unload_file.XXXXXXX)
    exit_on_error "$?" "Unable to create temporary unload file (${FUNCNAME[0]}:${LINENO})"
}

unload_orders () {
    log "Starting orders unload operation"

    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
UNLOAD TO "${unload_file}"
SELECT * FROM orders WHERE order_date < (today - 7);
EOF

    log "Finished orders unload operation"
}

archive_orders () {
    log "Starting archive orders load operation"

    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
LOAD FROM "${temp_file}"
INSERT INTO archorders;
EOF

    log "Finished archive orders load operation"
}

delete_orders () {
    log "Starting orders deletion operation"

    dbaccess "${database}" - >/dev/null 2>&1 <<EOF
DELETE FROM orders WHERE order_date < (today - 7);
EOF

    log "Finished orders deletion operation"
}

delete_unload_file () {
    rm -f "${unload_file}"
    exit_on_error "$?" "Unable to remove temporary file (${FUNCNAME[0]}:${LINENO})"
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    create_unload_file
    unload_orders
    archive_orders
    delete_orders
    delete_unload_file
}

main "${@}"
