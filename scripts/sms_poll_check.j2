#!/bin/bash

# Check status of SMS poll daemon and send alerts if not running.

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root"
        exit 1
    fi
}

create_mail_file () {
    mail_file=$(mktemp -t sms_poll_check.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail file" >&2
        exit 1
    fi
}

check_daemon () {
    local daemon_pid=$(pgrep -u ${USER} SMS_poll)

    if [[ -z "${daemon_pid}" ]]; then
        echo "${script_name}: daemon is not running" >&2
    	echo "SMS Polling program has stopped" >> "${mail_file}"
    	echo -e "Automatic restart has NOT been initiated\n" >> "${mail_file}"
    else
        echo "${script_name}: daemon is running (${daemon_pid})"
    fi
}

delete_mail_file () {
    rm -f "${mail_file}"
}

# -- Alerts -------------------------------------------------------------------

send_alert () {
    local subject="$1"
    local mail_file="$2"
{% if alerts.enabled %}
    mailx -r "${USER}@$(hostname)" -s "${subject}" {% for recipient in alerts_config.sms_poll_check %}{{ recipient }} {% endfor %}< "${mail_file}"
{% else %}
    echo "Alerts disabled; no mail message(s) will be generated"
{% endif %}
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    create_mail_file

    check_user
    check_daemon

    if [[ -s "${mail_file}" ]]; then
        send_alert "WARNING - SMS Polling" "${mail_file}"
    fi

    delete_mail_file
}

main "${@}"
